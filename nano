#!/usr/bin/env python3

from socket import *
import asyncio 

import database 
import env 


async def handle_client(reader: asyncio.StreamReader, writer: asyncio.StreamWriter):

    addr = writer.get_extra_info('peername')
    store = stores[0]
    print(f"Client {addr} joined")


    try:
        while True: 
            
            command = await reader.read(1024)
            command = command.decode()
            comlist = command.split()
            print(comlist)

            if comlist[0] == 'LIST':
                send_msg = '\n'.join(*[s.name for s in stores], sep='\n') 
                writer.write(send_msg)
                await writer.drain()

            elif comlist[0] == 'SELECT':
                print("hi")
                for i in stores:
                    if i.name == comlist[1]:
                        store = i 
                        send_msg = f"OK. Selected database {i.name}"
                        break 
                else:
                    send_msg = f"ERROR: No database {comlist[1]} exists"
                
                writer.write(send_msg)
                await writer.drain()

            elif comlist[0] == 'CREATE':
                new_name = comlist[1]
                stores.append(database.Database(new_name))
                send_msg = f"OK. Created new database {new_name}".encode()
                writer.write(send_msg)
                await writer.drain()

            elif comlist[0] == 'DROP':
                for i in range(len(stores)):
                    if stores[i].name == comlist[1]:
                        stores.pop(i)
                        print(f"OK. Deleted database {comlist[1]}")
                        break 
                else:
                   print(f"ERROR: No database {comlist[1]} exists")   

            if comlist[0] == 'GET':
                send_msg = store.get(comlist[1]).encode()
                print('sending a new message ', send_msg)
                writer.write(send_msg)
                await writer.drain()

            elif comlist[0] == 'SET':
                send_msg = store.set(comlist[1], comlist[2]).encode()
                print('sending message')
                writer.write(send_msg)
                await writer.drain()

            elif comlist[0] == 'DELETE':
                send_msg = store.delete(comlist[1]).encode()
                writer.write(send_msg)
                await writer.drain()

            else:   
                break 


    except BrokenPipeError:
        print(f"Client {addr} closed the connection")


    finally:
        writer.close()
        await writer.wait_closed()


async def main():
    server = await asyncio.start_server(handle_client, env.HOST, env.PORT)
    print("Server is listening")
    async with server:
        await server.serve_forever()


                
 


if __name__ == '__main__':
    stores = [database.Database("default")]
    asyncio.run(main())